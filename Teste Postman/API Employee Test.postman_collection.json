{
	"info": {
		"_postman_id": "6d2d378d-6e63-403b-b217-a5cd2ca4b6fc",
		"name": "API Employee Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Criar um funcionário",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const name = pm.environment.get(\"Joyce\");\r",
							"const salary = pm.environment.get(\"123123\");\r",
							"const age = pm.environment.get(\"19\");\r",
							"\r",
							"var response = pm.response.json();\r",
							"const emid = response.data.id;\r",
							"pm.environment.set(\"emid\", emid);\r",
							"pm.globals.set(\"id\", emid);\r",
							"\r",
							"pm.test(\"Check Content Type Header\",function(){\r",
							"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
							"});\r",
							"pm.test(\"Status code\", () => {//status codes\r",
							"    pm.response.to.have.status(200);\r",
							"    \r",
							"});\r",
							"pm.test(\"Teste para validar se está tudo ok e se contém corpo\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Teste de mensagem\", () => {\r",
							"     const responseJson = pm.response.json(); // cria a resposta\r",
							"     pm.expect(responseJson.message).to.eql(\"Successfully! Record has been added.\");\r",
							"    // não cria de verdade...\r",
							"    //não faz o processamento\r",
							"    // pm.expect(responseJson.status).to.eql(\"success\");\r",
							"});\r",
							"\r",
							"pm.test(\"Teste para verificar as informações\", () => {\r",
							"     const responseJson = pm.response.json(); // cria a resposta\r",
							"     pm.expect(responseJson.data.name).to.eql(name);\r",
							"      pm.expect(responseJson.data.salary).to.eql(salary);\r",
							"      pm.expect(responseJson.data.salary).to.eql(age);\r",
							"      pm.expect(responseJson.data.id).to.eql(emid);\r",
							"   \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(\"Criar um funcionário\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n            \"name\": {{Joyce}},\r\n            \"salary\": 123123,\r\n            \"age\": 19\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://dummy.restapiexample.com/api/v1/create",
					"protocol": "http",
					"host": [
						"dummy",
						"restapiexample",
						"com"
					],
					"path": [
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deletar funcionário",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const emid = pm.environment.get(\"emid\".toString);\r",
							"\r",
							"\r",
							"pm.test(\"Check Content Type Header\",function(){\r",
							"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Teste para validar se está tudo ok e se contém corpo\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Status code\", () => {//status codes\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Teste de mensagem\", () => {\r",
							"     const responseJson = pm.response.json(); // cria a resposta\r",
							"     pm.expect(responseJson.message).to.eql(\"Successfully! Record has been deleted\");\r",
							"     pm.expect(responseJson.data.id).to.eql(emid);\r",
							"      pm.expect(responseJson.status).to.eql(\"success\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://dummy.restapiexample.com/api/v1/delete/{{id}}",
					"protocol": "http",
					"host": [
						"dummy",
						"restapiexample",
						"com"
					],
					"path": [
						"api",
						"v1",
						"delete",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "emid",
			"value": ""
		}
	]
}